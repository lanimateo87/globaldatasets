# -*- coding: utf-8 -*-
"""
Created on Wed Mar  6 14:45:22 2019
@author: Lani L. Mateo
Purpose: Predict the factors affecting low birth weight.
Note: Two (2) raw data set explored
"""
# Step 1: Import modules
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.formula.api as smf
from sklearn.model_selection import train_test_split # train/test split
from sklearn.neighbors import KNeighborsRegressor
import sklearn.metrics
from sklearn.model_selection import cross_val_score

# Step 2: Import data set
file = 'birthweight.xlsx'
bw = pd.read_excel(file)

# Step 3: Get general info about the full data set
print(bw.columns)
print(bw.head())
print(bw.shape)
print(bw.info())
print(bw.describe().round(2))

# Step 4: Flag missing values: 
print(bw.isnull().sum())
print(bw.isnull().sum().sum())
print(((((bw[:].isnull().sum())/bw[:].count()))).sum().round(2))

for col in bw:
    if bw[col].isnull().astype(int).sum() > 0:
        bw['m_'+col] = bw[col].isnull().astype(int)
        
bw= pd.DataFrame.copy(bw)

# Step 5: Check if there is any significant correlation
corr = bw.iloc[:, :-9].corr()
print(corr)

plt.figure(figsize=(15,15))
sns.set(font_scale=1.05)
sns.heatmap(corr,
            square = True,
            annot = True,
            linecolor = 'white',
            linewidths = 0.05)

"""
DATA SET INSIGHT
There are 18 variables and 1832 observations.
Nine (9) variables have null values.
There are 387 total null values.
More than 20% of the observations have missing values.
There is no correlation between birth weight and any of the variables
No point doing any further analysis on this data set
"""

# Step 1: Clear variable explorer and console
# Step 2: Run packages
# Step 3: Import new data set
file = 'birthweight_feature_set.xlsx'
bw1 = pd.read_excel(file)

# Step 4: Get general info about the full data set
print(bw1.columns)
print(bw1.shape)
print(bw1.info())
bw1_summary = bw1.iloc[:,:-3].describe().round(2)
print(bw1_summary)

# Step 5: Identify and flag missing values
print(bw1.isnull().sum())
print(bw1.isnull().sum().sum())
print(((((bw1[:].isnull().sum())/bw1[:].count()))).sum().round(2))

for col in bw1:
    if bw1[col].isnull().astype(int).sum() > 0:
        bw1['m_'+col] = bw1[col].isnull().astype(int)      
bw1= pd.DataFrame.copy(bw1)

a = bw1.isnull().sum().sum()
b = bw1.iloc[:,-3:].sum().sum()

if a == b:
    print('All missing values accounted for.')
else:
    print('Some missing values may be unaccounted for, please audit.')

"""
DATA SET INSIGHT
There are 18 variables and 196 observations.
Three (3) variables have null values - meduc, npvis and feduc
There are 13 total null values.
7% of the observations having missing values.
"""

# Step 6: Create independent dataframes to test imputation methods
bw_0 = pd.DataFrame.copy(bw1)
bw_median = pd.DataFrame.copy(bw_0)

# Step 6a: Impute missing data with zero (0)
bw_0= pd.DataFrame.copy(bw1)
bw_0= bw_0.fillna(0)

for col in bw_0.iloc[:, :-3]:
    sns.distplot(bw_0[col])
    plt.tight_layout()
    plt.show()

# Step 6b: Impute missing data with median
for col in bw_median:
        if bw_median[col].isnull().astype(int).sum() > 0:
            col_median = bw_median[col].median()
            bw_median[col] = bw_median[col].fillna(col_median).round(2)
            
for col in bw_median.iloc[:, :-3]:
    sns.distplot(bw_0[col])
    plt.tight_layout()
    plt.show()

# Step 7: Explore data
# Step 7a: Correlation
corr1 = bw_median.iloc[:, :-3].corr()
print(corr1)

plt.figure(figsize=(15,12))
sns.set(font_scale=1.15)
sns.heatmap(corr1,
            square = True,
            annot = True,
            linecolor = 'white',
            linewidths = 0.02,
            cbar = True)

"""
CORRELATION INTERPRETATION
There is a low negative correlation between parents' age and child's birthweight.
This means that the older the parents are, the likelihood that their child's
birthweight will be lower than average increases.

Meanwhile there is a moderate negative correlation for both cigarette and
alcohol consumption with child's birthweight. This means that the higher a
mother's consumption of cigarette and alcohol are, the higher the likelihood
that a child's birthweight will be lower than average.
"""

# Step 7b: Outlier Analysis
bw_median_quantiles = bw_median.loc[:, :].quantile([0.20,
                                                    0.40,
                                                    0.60,
                                                    0.80,
                                                    1.00])    
print(bw_median_quantiles)

for col in bw_median:
    print(col)

# Step 7c: Distribution
# Birthweight distribution
plt.figure(figsize=(12,8))
sns.distplot(bw_median['bwght'],
             bins = 35,
             color = 'b')
plt.xlabel('Birthweight')

# Birthweight outliers
plt.figure(figsize=(12,8))
plt.boxplot(x = 'bwght',
            data = bw_median,
            vert = False,
            patch_artist = True,
            meanline = True,
            showmeans = True)
plt.xlabel ('Birthweight')
plt.show()

# Mother's age
plt.figure(figsize=(12,8))
sns.distplot(bw_median['mage'],
             bins = 25,
             color = 'b')

plt.xlabel("Mother's age")

# Mother's Age outliers
plt.figure(figsize=(12,8))
plt.boxplot(x = 'mage',
            data = bw_median,
            vert = False,
            patch_artist = True,
            meanline = True,
            showmeans = True)
plt.xlabel ("Mother's Age")
plt.show()

# Father's Age
plt.figure(figsize=(12,8))
sns.distplot(bw_median['fage'],
             bins = 25,
             color = 'b')

plt.xlabel("Father's age")

# Father's Age outliers
plt.figure(figsize=(12,8))
plt.boxplot(x = 'fage',
            data = bw_median,
            vert = False,
            patch_artist = True,
            meanline = True,
            showmeans = True)
plt.xlabel ("Father's Age")
plt.show()

# Average cigarette consumption
plt.figure(figsize=(12,8))
sns.distplot(bw_median['cigs'],
             bins = 25,
             color = 'g')

plt.xlabel("Average cigarette consumption")

# Average cigarette consumption outliers
plt.figure(figsize=(12,8))
plt.boxplot(x = 'cigs',
            data = bw_median,
            vert = False,
            patch_artist = True,
            meanline = True,
            showmeans = True)
plt.xlabel ("Average cigarette consumption")
plt.show()

# Average alcohol consumption
plt.figure(figsize=(12,8))
sns.distplot(bw_median['drink'],
             bins = 15,
             color = 'y')

plt.xlabel("Average alcohol consumption")

# Average alcohol consumption outliers
plt.figure(figsize=(12,8))
plt.boxplot(x = 'drink',
            data = bw_median,
            vert = False,
            patch_artist = True,
            meanline = True,
            showmeans = True)
plt.xlabel ("Average alcohol consumption")
plt.show()

# Step 7d Scatterplots
#Mother's Age
sns.set(font_scale=1.5)
bw_mage = sns.lmplot(x = 'mage',
                y = 'bwght',
                height=8,
                aspect= 1.5,
                fit_reg = True,
                scatter_kws={"s": 300},
                palette = 'plasma',
                data = bw_median)
plt.title ("Birthweight and Mother's Age")
plt.ylabel ('Birthweight')
plt.xlabel ("Mother's Age")
plt.show()

#Father's Age
sns.set(font_scale=1.5)
bw_mage = sns.lmplot(x = 'fage',
                y = 'bwght',
                height=8,
                aspect= 1.5,
                fit_reg = True,
                scatter_kws={"s": 300},
                palette = 'plasma',
                data = bw_median)
plt.title ("Birthweight and Father's Age")
plt.ylabel ('Birthweight')
plt.xlabel ("Father's Age")
plt.show()

#Average cigarette consumption
sns.set(font_scale=1.5)
bw_mage = sns.lmplot(x = 'cigs',
                y = 'bwght',
                height=8,
                aspect= 1.5,
                fit_reg = True,
                scatter_kws={"s": 300},
                palette = 'plasma',
                data = bw_median)
plt.title ("Birthweight and Average cigarette consumption")
plt.ylabel ('Birthweight')
plt.xlabel ("Average cigarette consumption")
plt.show()

#Average alcohol consumption
sns.set(font_scale=1.5)
bw_mage = sns.lmplot(x = 'drink',
                y = 'bwght',
                height=8,
                aspect= 1.5,
                fit_reg = True,
                scatter_kws={"s": 300},
                palette = 'plasma',
                data = bw_median)
plt.title ("Birthweight and Average alcohol consumption")
plt.ylabel ('Birthweight')
plt.xlabel ("Average alcohol consumption")
plt.show()

##############################################################################
#Regression Analysis
##############################################################################
# Full Model
bw_median_bwght = smf.ols(formula = """bwght ~ bw_median['mage'] +
                                              bw_median['meduc'] +
                                              bw_median['monpre'] +
                                              bw_median['npvis'] +
                                              bw_median['fage'] +
                                              bw_median['feduc'] +
                                              bw_median['omaps'] +
                                              bw_median['fmaps'] +
                                              bw_median['cigs'] +
                                              bw_median['drink'] +
                                              bw_median['male'] +
                                              bw_median['mwhte'] +
                                              bw_median['mblck'] +
                                              bw_median['moth'] +
                                              bw_median['fwhte'] +
                                              bw_median['fblck'] +
                                              bw_median['foth'] +
                                              bw_median['bwght'] +
                                              bw_median['m_meduc'] +
                                              bw_median['m_npvis'] +
                                              bw_median['m_feduc']
                                              """,
                                              data = bw_median)
results_bwght = bw_median_bwght.fit()
print(results_bwght.summary())

print(f"""
Summary Statistics:
R-Squared:          {results_bwght.rsquared.round(3)}
Adjusted R-Squared: {results_bwght.rsquared_adj.round(3)}
""")
    
predict = results_bwght.predict()
y_hat   = pd.DataFrame(predict).round(2)
resids  = results_bwght.resid.round(2)

# We can find more functions available using the dir() command.
dir(results_bwght)

# Saving as a new dataset for future use.
bw_median.to_excel('Birthweight_Dummies.xlsx')

    
